version: '3.9'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: n8body.dev-fiber-backend-image
    container_name: n8body.dev-fiber-backend
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - n8body.dev-backend-net

  database:
    image: postgres:14-alpine
    container_name: n8body.dev-backend-db
    ports:
      - "5431:5432"
    environment:
      - PGUSER=${PGUSER}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - n8body.dev-backend-db-volume:/var/lib/postgresql/data
      - ./platform/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - n8body.dev-backend-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  n8body.dev-backend-db-volume:
    name: n8body.dev-backend-db-volume
    driver: local

networks:
  n8body.dev-backend-net:
    name: n8body.dev-backend-net
    driver: bridge
